'use strict';

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var express = require('express');
var bodyParser = require('body-parser');
var cors = require('cors');
var querystring = require('querystring');
var openBrowser = require('./openBrowser');
var platformConfig = require('../config');

var login = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
    var app, server, beginLoginQueries, endLoginQueries, opnRes;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            app = express();

            app.use(bodyParser.json());
            app.use(cors());
            server = app.listen(8000);
            beginLoginQueries = querystring.stringify({ cli: 'true' });
            endLoginQueries = querystring.stringify({ cli: 'true', cliLoginSuccessful: 'true' });
            _context.next = 8;
            return openBrowser(`${platformConfig.frontendUrl}?${beginLoginQueries}`);

          case 8:
            opnRes = _context.sent;
            return _context.abrupt('return', new Promise(function (resolve) {
              app.get('/', function (req, res) {
                if (opnRes) opnRes.kill();
                res.redirect(`${platformConfig.frontendUrl}?${endLoginQueries}`);
                res.end();
                server.close();
                return resolve(req.query);
              });
            }));

          case 10:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function login() {
    return _ref.apply(this, arguments);
  };
}();

module.exports = login;
//# sourceMappingURL=login.js.map