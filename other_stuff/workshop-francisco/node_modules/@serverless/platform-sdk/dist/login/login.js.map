{"version":3,"sources":["../../src/login/login.js"],"names":["express","require","bodyParser","cors","querystring","openBrowser","platformConfig","login","app","use","json","server","listen","beginLoginQueries","stringify","cli","endLoginQueries","cliLoginSuccessful","frontendUrl","opnRes","Promise","resolve","get","req","res","kill","redirect","end","close","query","module","exports"],"mappings":";;;;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,aAAR,CAAnB;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,IAAMG,cAAcH,QAAQ,aAAR,CAApB;AACA,IAAMI,cAAcJ,QAAQ,eAAR,CAApB;AACA,IAAMK,iBAAiBL,QAAQ,WAAR,CAAvB;;AAEA,IAAMM;AAAA,qEAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AACNC,eADM,GACAR,SADA;;AAEZQ,gBAAIC,GAAJ,CAAQP,WAAWQ,IAAX,EAAR;AACAF,gBAAIC,GAAJ,CAAQN,MAAR;AACMQ,kBAJM,GAIGH,IAAII,MAAJ,CAAW,IAAX,CAJH;AAKNC,6BALM,GAKcT,YAAYU,SAAZ,CAAsB,EAAEC,KAAK,MAAP,EAAtB,CALd;AAMNC,2BANM,GAMYZ,YAAYU,SAAZ,CAAsB,EAAEC,KAAK,MAAP,EAAeE,oBAAoB,MAAnC,EAAtB,CANZ;AAAA;AAAA,mBAQSZ,YAAa,GAAEC,eAAeY,WAAY,IAAGL,iBAAkB,EAA/D,CART;;AAAA;AAQNM,kBARM;AAAA,6CAUL,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9Bb,kBAAIc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzB,oBAAIL,MAAJ,EAAYA,OAAOM,IAAP;AACZD,oBAAIE,QAAJ,CAAc,GAAEpB,eAAeY,WAAY,IAAGF,eAAgB,EAA9D;AACAQ,oBAAIG,GAAJ;AACAhB,uBAAOiB,KAAP;AACA,uBAAOP,QAAQE,IAAIM,KAAZ,CAAP;AACD,eAND;AAOD,aARM,CAVK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAqBAC,OAAOC,OAAP,GAAiBxB,KAAjB","file":"login.js","sourcesContent":["const express = require('express')\nconst bodyParser = require('body-parser')\nconst cors = require('cors')\nconst querystring = require('querystring')\nconst openBrowser = require('./openBrowser')\nconst platformConfig = require('../config')\n\nconst login = async () => {\n  const app = express()\n  app.use(bodyParser.json())\n  app.use(cors())\n  const server = app.listen(8000)\n  const beginLoginQueries = querystring.stringify({ cli: 'true' })\n  const endLoginQueries = querystring.stringify({ cli: 'true', cliLoginSuccessful: 'true' })\n\n  const opnRes = await openBrowser(`${platformConfig.frontendUrl}?${beginLoginQueries}`)\n\n  return new Promise((resolve) => {\n    app.get('/', (req, res) => {\n      if (opnRes) opnRes.kill()\n      res.redirect(`${platformConfig.frontendUrl}?${endLoginQueries}`)\n      res.end()\n      server.close()\n      return resolve(req.query)\n    })\n  })\n}\n\nmodule.exports = login\n"]}